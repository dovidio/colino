name: Update Demo Snapshots

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for updating demo snapshots'
        required: false
        default: 'Update demo snapshots'

permissions:
  contents: write

jobs:
  update-demo:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'

      - name: Cache Go modules and build cache
        id: cache-go
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Check Go cache hit
        run: |
          if [ "${{ steps.cache-go.outputs.cache-hit }}" == "true" ]; then
            echo "✅ Go cache hit! Dependencies restored from cache."
          else
            echo "❌ Go cache miss. Dependencies will be downloaded."
          fi

      - name: Build Colino
        run: go build -o colino ./cmd/colino

      - name: Build demo server
        run: go build -o demo-server ./cmd/demo-server

      - name: Start demo server
        run: |
          ./demo-server -port 8080 &
          sleep 2

      - name: Cache VHS binary
        uses: actions/cache@v4
        with:
          path: ~/go/bin/vhs
          key: ${{ runner.os }}-vhs-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-vhs-

      - name: Install VHS
        run: |
          if [ ! -f ~/go/bin/vhs ]; then
            go install github.com/charmbracelet/vhs@latest
          fi
          echo "~/go/bin" >> $GITHUB_PATH

      - name: Install VHS dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ffmpeg ttyd
          version: 1.0

      - name: Generate new demo
        working-directory: ./demo
        run: vhs demo.tape

      - name: Validate demo generation
        run: |
          if [ ! -f "demo/demo.gif" ]; then
            echo "❌ Demo GIF not generated"
            exit 1
          fi
          if [ ! -f "demo/golden.ascii" ]; then
            echo "❌ Golden ASCII file not generated"
            exit 1
          fi
          echo "✅ Demo files generated successfully"

      - name: Commit and push updated snapshots
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update generated VHS GIF
          branch: ${{ github.ref_name }}
          commit_user_name: vhs-action 📼
          commit_user_email: actions@github.com
          commit_author: vhs-action 📼 <actions@github.com>
          file_pattern: 'demo/*'
          create_commit: true
